document.addEventListener('DOMContentLoaded', function() {

    pageButtons();
    showPassword();

    templateSwitcher();
    removeContributor();
    searchContributor();

    actionButtons();
    pushStateDetect();
    headerChangingWords();
});

function sendForm() {
    document.querySelectorAll('.form button[type="submit"]').forEach(button => {
        button.addEventListener('click', function(e) {

            e.preventDefault();

            var form = button.closest('form');

            var array = [];
            form.querySelectorAll('button, input, textarea, select:not(multiple)').forEach(input => {
                array[input.getAttribute('name')] = input.value;
            });

            request('/form/' + form.getAttribute('name') + '/', array, function(data) {

                document.querySelector('.page-body').innerHTML = data.html;

                pageButtons();
                sendForm();
                actionButtons();
            });

            console.log(array);
        });
    });
}

function loading( start = false ) {
    
    var loading = document.querySelector('.loading');
    if (start == false) {
        loading.classList.remove('active');
        return;
    }
    
    loading.classList.add('active');
}

function request(url, data, callback) {
    var xmlHttp = new XMLHttpRequest();
    loading(true);
    xmlHttp.onreadystatechange = function() { 
        if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {

            let data = {};

            try {
                data = JSON.parse(xmlHttp.responseText);
            } catch (e) {
                loading(false);
                return;
            }
            console.log(data);

            if (data.status != 'ok') {
                loading(false);
                return;
            }

            loading(false);
            callback(data);
        }
    }

    let query = null;
    let method = 'GET';
    let _formData = null;
    if (data && Object.keys(data).length > 0) {
        method = 'POST';

        query = [];
        _formData = new FormData();
        for (let key in data) {
            _formData.append(key, data[key]);
            query.push(key + '=' + data[key]);
        }

        query = query.join('&');
    }
    console.log(query);
    xmlHttp.open(method, 'http://sps.phpcore.cz' + url, true);
    if (method == 'POST') {
        xmlHttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    }
    xmlHttp.send(query);
}

function pageButtons() {

    document.querySelectorAll('button[page]').forEach(button => {
        button.replaceWith(button.cloneNode(true));
    });

    document.querySelectorAll('.form button[type="submit"]').forEach(button => {
        button.replaceWith(button.cloneNode(true));
    });

    document.querySelectorAll('button[page]').forEach(button => {
        button.addEventListener('click', function () {

            var url = '/' + this.getAttribute('page') + '/';
            var params = ['AX'];

            for (const attr of this.attributes) {
                if (attr.name.startsWith('url-')) {
                    params.push(attr.name.split('-')[1] + '=' + attr.value);
                }
            }

            url = url + '?' + params.join('&');
            console.log(url, params);
            request(url, [], function(data) {

                console.log(data.title);

                if (data.html.includes('<head>')) {
                    document.documentElement.innerHTML = data.html;
                } else {

                    document.querySelector('.page-body').innerHTML = data.html;
                    document.querySelector('title').textContent = 'WEBedu - ' + data.title;
                    
                    let container = document.createElement('div');
                    container.innerHTML = data.html;
                    if (container.querySelector('h1')) {
                        data.title = container.querySelector('h1').innerText;
                    }
                    
                    document.querySelector('h1').innerText = data.title;
                }

                params.shift();
                let URLparams = '';
                if (params.length >= 1) {
                    URLparams = '?' + params.join('&');
                }
                console.log(data.html);
                window.history.pushState({
                    html: data.html,
                    title: document.querySelector('title').textContent
                }, '', '/' + button.getAttribute('page') + URLparams);

                pageButtons();
                sendForm();
                actionButtons();
            });
        });
    });
}

function pushStateDetect() {
    window.addEventListener('popstate', (e) => {
        console.log(e);
        if (!e.state) {
            return;
        }
        console.log(e.state);

        document.querySelector('body section').innerHTML = e.state.html;
        document.title.innerHTML = e.state.title;
        let heading = e.state.title.replace('WEBedu - ', '');
        document.querySelector('body h1').innerHTML = heading;
    });
}

function templateSwitcher() {
    document.getElementsByClassName('switch-theme-button')[0].addEventListener('click', function()
    {
        document.getElementsByTagName('html')[0].classList.toggle('html-theme-dark');

        if (document.getElementsByTagName('html')[0].classList.contains('html-theme-dark'))
        {
            document.cookie = 'theme=dark;path=/;';
            document.querySelector('[rel="icon"]').href = faviconDarkHref;
            return;
        }

        document.cookie = 'theme=light;path=/;';
        document.querySelector('[rel="icon"]').href = faviconLightHref;
    });
}

function removeContributor() {
    document.addEventListener('click', function(e) {

        var button = e.target.closest('.js-remove-contributor');
        if (!button) {
            return;
        }

        var list = button.closest('.form').querySelector('.form-row-list');
        list.querySelector('select option[id="' + button.getAttribute('id') + '"').remove();
        button.closest('.user').remove();
    });
}

function searchContributor() {
    document.querySelector('input[name="contributor_name"]')?.addEventListener('input', function() {

        var membersDropdown = document.querySelector('.dropdown');
        if (this.value.length <= 3) {
            membersDropdown.classList.remove('active');
            return;
        }

        console.log(membersDropdown);
        var rect = this.getBoundingClientRect();
        membersDropdown.style.top = (document.documentElement.scrollTop + rect.top + rect.height) + 'px';
        membersDropdown.style.left = (rect.left) + 'px';

        membersDropdown.classList.add('active');
        
        var clon = membersDropdown.children[0].cloneNode(true);
        while (membersDropdown.firstChild) {
            membersDropdown.firstChild.remove();
        }

        var foudMembers = [];
        members.forEach(member => {
            if (member.login.startsWith(this.value)) {
                foudMembers.push(member);
            }
        });
        console.log(clon);
        foudMembers.forEach(member => {
            var newMember = clon.cloneNode(true);
            newMember.querySelector('[contributor="name"]').textContent = member.login;
            newMember.querySelector('[contributor="image"]').src = member.avatar_url;
            newMember.setAttribute('member-id', member.id);

            newMember.addEventListener('click', function() {
                
                var image = this.querySelector('img').src;
                var id = this.getAttribute('member-id');
                var name = this.querySelector('span').textContent;

                var list = document.querySelector('.form').querySelector('.form-row-list');
                var template = list.querySelector('.user').cloneNode(true);
                template.querySelector('img').src = image;
                template.querySelector('span').textContent = name;
                template.querySelector('button').id = id;
                template.classList.remove('hide');

                var option = document.createElement('option');
                option.value = id;
                option.selected = true;
                option.id = id;

                list.querySelector('select').append(option);
                list.append(template);

                document.querySelector('[name="contributor_name"]').value = '';
                membersDropdown.classList.remove('active');
            });

            membersDropdown.append(newMember);
        });
    });
}

function copyToClipboard() {
  const textArea = document.createElement("textarea");
  textArea.value = text;
  document.body.appendChild(textArea);
  textArea.focus();
  textArea.select();
  try {
    document.execCommand('copy');
  } catch (err) {
    console.error('Unable to copy to clipboard', err);
  }
  document.body.removeChild(textArea);
}

function showPassword() {
    document.querySelector('[function="showPassword"]')?.addEventListener('click', function()
    {
        var value = this.closest('.block').querySelector('.block-value');

        if (value.innerText == '**********')
        {
            value.innerText = value.getAttribute('value');
            return;
        }

        value.innerText = '**********';
    });
}

function headerChangingWords() {

    let words = document.querySelectorAll(".word");
    words.forEach((word) => {
        let letters = word.textContent.split("");
        word.textContent = "";
        letters.forEach((letter) => {
            let span = document.createElement("span");
            span.textContent = letter;
            span.className = "letter";
            word.append(span);
        });
    });

    let currentWordIndex = 0;
    let maxWordIndex = words.length - 1;
    words[currentWordIndex].style.opacity = "1";

    let rotateText = () => {
        let currentWord = words[currentWordIndex];
        let nextWord =
            currentWordIndex === maxWordIndex ? words[0] : words[currentWordIndex + 1];
        // rotate out letters of current word
        Array.from(currentWord.children).forEach((letter, i) => {
            setTimeout(() => {
            letter.className = "letter out";
            }, i * 80);
        });
        // reveal and rotate in letters of next word
        nextWord.style.opacity = "1";
        Array.from(nextWord.children).forEach((letter, i) => {
            letter.className = "letter behind";
            setTimeout(() => {
            letter.className = "letter in";
            }, 340 + i * 80);
        });
        currentWordIndex =
        currentWordIndex === maxWordIndex ? 0 : currentWordIndex + 1;
    };

    rotateText();
    setInterval(rotateText, 4000);
}

function actionButtons() {

    document.querySelectorAll('[action]').forEach(btn => {
        btn.addEventListener('click', function() {

            request('?action=' + this.getAttribute('action'), [], function(data) {

                console.log(data);
                if (data?.refresh) {
                    location.reload();
                }

                if (data.html) {
                    document.querySelector('.page-body').innerHTML = data.html;
                }

                actionButtons();
                pageButtons();

            });

        });
    });
}